<!--
    TODO : Section for Upcomming Events
    1. 
    2. get number of events
    3. if number of events = 0 display message
    4. if number of enents > 0 display event information

-->
@using LOLAWebsite.Models;
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework;

<h2>Upcoming Events</h2>

@{
    // GET : userID
    var currentUserID = User.Identity.GetUserId();
    var userManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
    var currentUser = userManager.FindById(User.Identity.GetUserId());

    // GET : todays date
    DateTime todayDate = DateTime.Today;

    // GET : donations
    LOLADBEntities db = new LOLADBEntities();

    var eventList = db.Events.ToList();
    var eventRegList = db.Event_Registration.ToList();
    int i = 0;

    if (eventRegList.Count > 0)
    {

        foreach (var item in eventRegList)
        {
            var thisEvent = db.Events.Single(d => d.Event_ID == item.Event_ID);
            DateTime endDate = thisEvent.Event_End_Date ?? DateTime.Now;
            DateTime startDate = thisEvent.Event_Start_Date ?? DateTime.Now;
            TimeSpan ts = endDate - startDate;
            int dateCompare = DateTime.Compare(endDate, todayDate);
            // if date is later than today and the user id matches the currentUser
            // display the class
            if (dateCompare >= 0 && item.Id == currentUser.Id)
            {
                i++;
                <!--
                    Display class box
                -->
                <div>
                    <ul class="event-list">
                        <time>
                            <span class="day">@startDate.Day.ToString()</span>
                            <span class="month">@startDate.ToString("MMM")</span>
                            @if (ts.Days == 0)
                            {
                                <span class="time">@Html.DisplayFor(modelItem => thisEvent.Event_Time_Start) - @Html.DisplayFor(modeItem => thisEvent.Event_Time_End)</span>
                            }
                            else
                            {
                                <span class="year">Through @endDate.ToString("MMM dd")</span>
                                <br />
                                <span class="time">@Html.DisplayFor(modelItem => thisEvent.Event_Time_Start) - @Html.DisplayFor(modeItem => thisEvent.Event_Time_End)</span>
                            }
                        </time>
                        <div class="info">
                            <h2 class="title">@Html.DisplayFor(modelItem => thisEvent.Event_Type)</h2>
                            <p class="desc">@Html.DisplayFor(modelItem => thisEvent.Event_Desc)</p>
                        </div>
                    </ul>
                </div>
            } // end if

        } // end foreach

    if (i == 0)
        {
            <p>You are not registered for any events!</p>
            <p>@Html.ActionLink("Sign up for one today!", "Index", "Events", new {@id = ""},new { @class = "btn btn-default" })</p>
            <br />
        } // end if
        
    } // end if

    else
    {
        <p>There are no events in the database.</p>
    } // end else
}