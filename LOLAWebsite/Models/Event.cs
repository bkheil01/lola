//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LOLAWebsite.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class Event
    {
        public Event()
        {
            this.Event_Feedback = new HashSet<Event_Feedback>();
            this.Event_Registration = new HashSet<Event_Registration>();
        }

        public int Event_ID { get; set; }

        [Display(Name = "Name")]
        public string Event_Type { get; set; }

        [Display(Name = "Description")]
        [DataType(DataType.MultilineText)]
        public string Event_Desc { get; set; }

        [Display(Name = "Start Date")]
        [DisplayFormat(DataFormatString = "{0:MM/dd/yy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> Event_Start_Date { get; set; }

        [Display(Name = "End Date")]
        [DisplayFormat(DataFormatString = "{0:MM/dd/yy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> Event_End_Date { get; set; }

        [Display(Name = "Start Time")]
        [DisplayFormat(DataFormatString = "{0:hh\\:mm}", ApplyFormatInEditMode = true)]
        public Nullable<System.TimeSpan> Event_Time_Start { get; set; }

        [Display(Name = "End Time")]
        [DisplayFormat(DataFormatString = "{0:hh\\:mm}", ApplyFormatInEditMode = true)]
        public Nullable<System.TimeSpan> Event_Time_End { get; set; }

        [Display(Name = "Tickets Sold")]
        public Nullable<int> Tickets_Sold { get; set; }

        [Display(Name = "Maximum Tickets")]
        public Nullable<int> Max_Tickets { get; set; }

        [Display(Name = "Cost")]
        [DisplayFormat(DataFormatString = "{0:c}", ApplyFormatInEditMode = true)]
        public Nullable<float> Event_Cost { get; set; }

        [Display(Name = "Location")]
        public string Event_Location { get; set; }

        [Display(Name = "Special Notes")]
        [DataType(DataType.MultilineText)]
        public string Event_Notes { get; set; }

        public virtual ICollection<Event_Feedback> Event_Feedback { get; set; }
        public virtual ICollection<Event_Registration> Event_Registration { get; set; }
    }
}
